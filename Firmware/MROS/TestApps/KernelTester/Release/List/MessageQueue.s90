        NAME MessageQueue

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__cpu", "3"
        RTMODEL "__cpu_name", "AT90Mega32"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "2.30"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        EXTERN taskQueue
        EXTERN currentTaskIndex

        PUBLIC Kernel_GetMessage
        FUNCTION Kernel_GetMessage,0203H
        PUBLIC Kernel_PostMessage
        FUNCTION Kernel_PostMessage,0203H
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
;     1 #include <Globals.h>
;     2 #include "Kernel.h"
;     3 #include "KernelInternals.h"
;     4 
;     5 

        RSEG CODE:CODE:NOROOT(1)
;     6 bool Kernel_PostMessage(unsigned char msg, messageQueue* mq)
;     7 {
; __nearfunc unsigned char Kernel_PostMessage(unsigned char, messageQueue *);
Kernel_PostMessage:
	MOV	R23,R27
	MOV	R22,R26
;     8 unsigned char index;
;     9 
;    10 	if(mq->full)
	MOVW	R31 : R30,R19 : R18
	LDD	R17,Z+2
	TST	R17
	BREQ	??Kernel_PostMessage_0
;    11 	{
;    12 #if TASKER_DEBUG_LEVEL > 0
;    13 		Kernel_DebuggerEvent(DEBUG_EVENT_POSTMESSAGE, null, DEBUG_STATUS_NO_ROOM, (unsigned long)mq);
;    14 #endif
;    15 		return false;
	LDI	R16,0
	RJMP	??Kernel_PostMessage_1
;    16 	}
;    17 	
;    18 	mq->data[mq->head] = msg;
??Kernel_PostMessage_0:
	MOVW	R27 : R26,R19 : R18
	ADIW	R27 : R26,3
	MOVW	R31 : R30,R19 : R18
	LD	R20,Z
	LDI	R21,0
	ADD	R26,R20
	ADC	R27,R21
	ST	X,R16
;    19 	
;    20 	if(++mq->head >= MESSAGE_QUEUE_SIZE)
	LD	R16,Z
	INC	R16
	ST	Z,R16
	CPI	R16,8
	BRCS	??Kernel_PostMessage_2
;    21 	{
;    22 		mq->head = 0;
	ST	Z,R21
;    23 	}
;    24 	
;    25 	for(index = 0; index < MAX_NUMBER_OF_TASKS; index++)
??Kernel_PostMessage_2:
	LDI	R20,0
;    26 	{
;    27 		if(taskQueue[index].blockingMessageQueue == mq)
??Kernel_PostMessage_3:
	LDI	R30,LOW(taskQueue)
	LDI	R31,(taskQueue) >> 8
	LDI	R16,13
	LDI	R17,0
	MUL	R17,R20
	MOV	R17,R0
	MUL	R16,R21
	ADD	R17,R0
	MUL	R16,R20
	ADD	R17,R1
	ADD	R30,R0
	ADC	R31,R17
	LDD	R16,Z+9
	LDD	R17,Z+10
	CP	R16,R18
	CPC	R17,R19
	BRNE	??Kernel_PostMessage_4
;    28 		{
;    29 			taskQueue[index].blockingMessageQueue = null;
	LDI	R16,0
	STD	Z+9,R16
	STD	Z+10,R16
;    30 #if TASKER_DEBUG_LEVEL > 0
;    31 			Kernel_DebuggerEvent(DEBUG_EVENT_POSTMESSAGE, null, DEBUG_STATUS_OK, (unsigned long)mq);
;    32 #endif
;    33 			return true;
	RJMP	??Kernel_PostMessage_5
??Kernel_PostMessage_4:
	INC	R20
	CPI	R20,8
	BRCS	??Kernel_PostMessage_3
;    34 		}
;    35 	}
;    36 	
;    37 #if TASKER_DEBUG_LEVEL > 0
;    38 	Kernel_DebuggerEvent(DEBUG_EVENT_POSTMESSAGE, null, DEBUG_STATUS_OK, (unsigned long)mq);
;    39 #endif
;    40 	return true;
??Kernel_PostMessage_5:
	LDI	R16,1
??Kernel_PostMessage_1:
	MOV	R26,R22
	MOV	R27,R23
	RET
;    41 }
;    42 
;    43 

        RSEG CODE:CODE:NOROOT(1)
;    44 bool Kernel_GetMessage(unsigned char* msg, messageQueue* mq)
;    45 {
; __nearfunc unsigned char Kernel_GetMessage(unsigned char *, messageQueue *);
Kernel_GetMessage:
	MOV	R23,R27
	MOV	R22,R26
;    46 	if(mq->full == false && mq->head == mq->tail)
	MOVW	R31 : R30,R19 : R18
	LDD	R20,Z+2
	TST	R20
	BRNE	??Kernel_GetMessage_0
	LD	R20,Z
	LDD	R21,Z+1
	CP	R20,R21
	BRNE	??Kernel_GetMessage_0
;    47 	{
;    48 		taskQueue[currentTaskIndex].blockingMessageQueue = mq;
	LDS	R20,currentTaskIndex
	LDI	R21,0
	LDI	R16,13
	LDI	R17,0
	MUL	R17,R20
	MOV	R17,R0
	MUL	R16,R21
	ADD	R17,R0
	MUL	R16,R20
	MOV	R16,R0
	ADD	R17,R1
	MOVW	R31 : R30,R17 : R16
	SUBI	R30,LOW((-(taskQueue) & 0xFFFF))
	SBCI	R31,(-(taskQueue) & 0xFFFF) >> 8
	STD	Z+9,R18
	STD	Z+10,R19
;    49 #if TASKER_DEBUG_LEVEL > 0
;    50 		Kernel_DebuggerEvent(DEBUG_EVENT_GETMESSAGE, null, DEBUG_STATUS_NO_MESSAGE, (unsigned long)mq);
;    51 #endif
;    52 		return false;
	LDI	R16,0
	RJMP	??Kernel_GetMessage_1
;    53 	}
;    54 	
;    55 	*msg = mq->data[mq->tail];
??Kernel_GetMessage_0:
	MOVW	R27 : R26,R19 : R18
	ADIW	R27 : R26,3
	MOVW	R31 : R30,R19 : R18
	LDD	R20,Z+1
	LDI	R21,0
	ADD	R26,R20
	ADC	R27,R21
	LD	R20,X
	MOVW	R31 : R30,R17 : R16
	ST	Z,R20
;    56 	
;    57 	if(++mq->tail >= MESSAGE_QUEUE_SIZE)
	MOVW	R31 : R30,R19 : R18
	LDD	R16,Z+1
	INC	R16
	STD	Z+1,R16
	CPI	R16,8
	BRCS	??Kernel_GetMessage_2
;    58 	{
;    59 		mq->tail = 0;
	STD	Z+1,R21
;    60 	}
;    61 	mq->full = false;
??Kernel_GetMessage_2:
	LDI	R16,0
	STD	Z+2,R16
;    62 	
;    63 #if TASKER_DEBUG_LEVEL > 0
;    64 	Kernel_DebuggerEvent(DEBUG_EVENT_GETMESSAGE, null, DEBUG_STATUS_OK, (unsigned long)mq);
;    65 #endif
;    66 	return true;
	LDI	R16,1
??Kernel_GetMessage_1:
	MOV	R26,R22
	MOV	R27,R23
	RET
;    67 }

        ASEGN ABSOLUTE:DATA:NOROOT,01cH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,01dH
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,01eH
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EEARH:

        END
; 
;    206 bytes in segment CODE
; 
;    206 bytes of CODE memory
;
;Errors: none
;Warnings: none
