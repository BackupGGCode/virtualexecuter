##############################################################################
#                                                                            #
#                                                      09/Mar/2008  16:57:10 #
# IAR Atmel AVR C/C++ Compiler V4.21A/W32, Evaluation Version                #
# Copyright 1996-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Source file  =  f:\Projects\[Drivers]\C\MROS\Terminal\Terminal.c        #
#    Command line =  --string_literals_in_flash                              #
#                    f:\Projects\[Drivers]\C\MROS\Terminal\Terminal.c        #
#                    --cpu=m32 -ms -o f:\Projects\[Drivers]\C\MROS\TestApps\ #
#                    CommanderTester\Release\Obj\ -D NDEBUG -lC              #
#                    f:\Projects\[Drivers]\C\MROS\TestApps\CommanderTester\R #
#                    elease\List\ -lA f:\Projects\[Drivers]\C\MROS\TestApps\ #
#                    CommanderTester\Release\List\ --initializers_in_flash   #
#                    -s9 -DENABLE_BIT_DEFINITIONS -e -I                      #
#                    f:\Projects\[Drivers]\C\mros\TestApps\CommanderTester\  #
#                    -I f:\Projects\[Drivers]\C\mros\ -I "C:\Program         #
#                    Files\IAR Systems\Embedded Workbench 4.0                #
#                    Evaluation\avr\INC\" -I "C:\Program Files\IAR           #
#                    Systems\Embedded Workbench 4.0                          #
#                    Evaluation\avr\INC\CLIB\" --eeprom_size 1024            #
#    List file    =  f:\Projects\[Drivers]\C\MROS\TestApps\CommanderTester\R #
#                    elease\List\Terminal.lst                                #
#    Object file  =  f:\Projects\[Drivers]\C\MROS\TestApps\CommanderTester\R #
#                    elease\Obj\Terminal.r90                                 #
#                                                                            #
#                                                                            #
##############################################################################

f:\Projects\[Drivers]\C\MROS\Terminal\Terminal.c
      1          #include <Globals.h>
      2          #include "Config.h"
      3          #include <Kernel/Kernel.h>
      4          #include <Peripherals/UART.h>
      5          #include <Commander/Commander.h>
      6          #include <strings.h>
      7          #include <FileStore/FileStore.h>
      8          #include <FileStore/InternalEEPROM.h>
      9          

   \                                 In segment CODE, align 2, keep-with-next
     10          void Terminal_Init()
   \                     Terminal_Init:
     11          {
     12          	Kernel_CreateTask(Commander_Run);
   \   00000000   ....               LDI     R16, LOW(Commander_Run/2)
   \   00000002   ....               LDI     R17, (Commander_Run/2) >> 8
   \   00000004   ........           JMP     Kernel_CreateTask
     13          }
     14          

   \                                 In segment CODE, align 2, keep-with-next
     15          void ListFiles(char* line)
   \                     ListFiles:
     16          {
   \   00000000   925A               ST      -Y, R5
   \   00000002   924A               ST      -Y, R4
   \   00000004   93BA               ST      -Y, R27
   \   00000006   93AA               ST      -Y, R26
   \   00000008   939A               ST      -Y, R25
   \   0000000A   938A               ST      -Y, R24
   \   0000000C                      REQUIRE ?Register_R4_is_cg_reg
   \   0000000C                      REQUIRE ?Register_R5_is_cg_reg
   \   0000000C   97EF               SBIW    R29:R28, 63
   \   0000000E   9723               SBIW    R29:R28, 3
     17          	fsFile f;
     18          	char name[50];
     19          	unsigned long totalBytes=0;
   \   00000010   E080               LDI     R24, 0
   \   00000012   E090               LDI     R25, 0
   \   00000014   E0A0               LDI     R26, 0
   \   00000016   E0B0               LDI     R27, 0
     20          	unsigned short totalFiles=0;
   \   00000018   2444               CLR     R4
   \   0000001A   2455               CLR     R5
     21          	
     22          	if(FileStore_GetNextFileEntry(&f, true) == false)
   \   0000001C   E021               LDI     R18, 1
   \   0000001E   018E               MOVW    R17:R16, R29:R28
   \   00000020   ........           CALL    FileStore_GetNextFileEntry
   \   00000024   2300               TST     R16
   \   00000026   F429               BRNE    ??ListFiles_0
     23          	{
     24          		UART_WriteString_P("No files\n");
   \   00000028   ....               LDI     R16, LOW(`?<Constant "No files\\n">`)
   \   0000002A   ....               LDI     R17, (`?<Constant "No files\\n">`) >> 8
   \   0000002C   ........           CALL    UART_WriteString_P
   \   00000030   C02B               RJMP    ??ListFiles_1
     25          	}
     26          	else
     27          	{
     28          		do
     29          		{
     30          			FileStore_GetFileName(&f, name, 50);
   \                     ??ListFiles_0:
   \   00000032   E342               LDI     R20, 50
   \   00000034   019E               MOVW    R19:R18, R29:R28
   \   00000036   5F20               SUBI    R18, 240
   \   00000038   4F3F               SBCI    R19, 255
   \   0000003A   018E               MOVW    R17:R16, R29:R28
   \   0000003C   ........           CALL    FileStore_GetFileName
     31          			UART_WriteString(name);
   \   00000040   018E               MOVW    R17:R16, R29:R28
   \   00000042   5F00               SUBI    R16, 240
   \   00000044   4F1F               SBCI    R17, 255
   \   00000046   ........           CALL    UART_WriteString
     32          			UART_WriteByte(' ');
   \   0000004A   E200               LDI     R16, 32
   \   0000004C   ........           CALL    UART_WriteByte
     33          			UART_WriteValueUnsigned(f.size);
   \   00000050   8508               LDD     R16, Y+8
   \   00000052   8519               LDD     R17, Y+9
   \   00000054   852A               LDD     R18, Y+10
   \   00000056   853B               LDD     R19, Y+11
   \   00000058   ........           CALL    UART_WriteValueUnsigned
     34          			UART_WriteString_P("\n");
   \   0000005C   ....               LDI     R16, LOW((`?<Constant "No files\\n">` + 10))
   \   0000005E   ....               LDI     R17, HIGH((`?<Constant "No files\\n">` + 10))
   \   00000060   ........           CALL    UART_WriteString_P
     35          			totalBytes += f.size;
   \   00000064   8508               LDD     R16, Y+8
   \   00000066   8519               LDD     R17, Y+9
   \   00000068   852A               LDD     R18, Y+10
   \   0000006A   853B               LDD     R19, Y+11
   \   0000006C   0F80               ADD     R24, R16
   \   0000006E   1F91               ADC     R25, R17
   \   00000070   1FA2               ADC     R26, R18
   \   00000072   1FB3               ADC     R27, R19
     36          			totalFiles++;
   \   00000074   E001               LDI     R16, 1
   \   00000076   0E40               ADD     R4, R16
   \   00000078   E000               LDI     R16, 0
   \   0000007A   1E50               ADC     R5, R16
     37          		}	while(FileStore_GetNextFileEntry(&f, false));
   \   0000007C   E020               LDI     R18, 0
   \   0000007E   018E               MOVW    R17:R16, R29:R28
   \   00000080   ........           CALL    FileStore_GetNextFileEntry
   \   00000084   2300               TST     R16
   \   00000086   F6A9               BRNE    ??ListFiles_0
     38          	}
     39          	
     40          	UART_WriteString_P("\n");
   \                     ??ListFiles_1:
   \   00000088   ....               LDI     R16, LOW((`?<Constant "No files\\n">` + 10))
   \   0000008A   ....               LDI     R17, HIGH((`?<Constant "No files\\n">` + 10))
   \   0000008C   ........           CALL    UART_WriteString_P
     41          	UART_WriteValueUnsigned(totalFiles);
   \   00000090   0182               MOVW    R17:R16, R5:R4
   \   00000092   E020               LDI     R18, 0
   \   00000094   E030               LDI     R19, 0
   \   00000096   ........           CALL    UART_WriteValueUnsigned
     42          	UART_WriteString_P(" files ");
   \   0000009A   ....               LDI     R16, LOW((`?<Constant "No files\\n">` + 12))
   \   0000009C   ....               LDI     R17, HIGH((`?<Constant "No files\\n">` + 12))
   \   0000009E   ........           CALL    UART_WriteString_P
     43          	UART_WriteValueUnsigned(totalBytes);
   \   000000A2   018C               MOVW    R17:R16, R25:R24
   \   000000A4   019D               MOVW    R19:R18, R27:R26
   \   000000A6   ........           CALL    UART_WriteValueUnsigned
     44          	UART_WriteString_P(" bytes");
   \   000000AA   ....               LDI     R16, LOW((`?<Constant "No files\\n">` + 20))
   \   000000AC   ....               LDI     R17, HIGH((`?<Constant "No files\\n">` + 20))
   \   000000AE   ........           CALL    UART_WriteString_P
     45          }
   \   000000B2   96EF               ADIW    R29:R28, 63
   \   000000B4   9623               ADIW    R29:R28, 3
   \   000000B6   9189               LD      R24, Y+
   \   000000B8   9199               LD      R25, Y+
   \   000000BA   91A9               LD      R26, Y+
   \   000000BC   91B9               LD      R27, Y+
   \   000000BE   9049               LD      R4, Y+
   \   000000C0   9059               LD      R5, Y+
   \   000000C2   9508               RET
     46          

   \                                 In segment CODE, align 2, keep-with-next
     47          void PrintFile(char* line)
   \                     PrintFile:
     48          {
   \   00000000   938A               ST      -Y, R24
   \   00000002   97A4               SBIW    R29:R28, 36
     49          	fsFile f;
     50          	unsigned char bytes;
     51          	unsigned char buf[20];
     52          	
     53          	if(FileStore_OpenFile(GetNextWord(line), &f) == false)
   \   00000004   ........           CALL    GetNextWord
   \   00000008   019E               MOVW    R19:R18, R29:R28
   \   0000000A   5E2C               SUBI    R18, 236
   \   0000000C   4F3F               SBCI    R19, 255
   \   0000000E   ........           CALL    FileStore_OpenFile
   \   00000012   2300               TST     R16
   \   00000014   F429               BRNE    ??PrintFile_0
     54          	{
     55          		UART_WriteString_P("File not found");
   \   00000016   ....               LDI     R16, LOW(`?<Constant "File not found">`)
   \   00000018   ....               LDI     R17, (`?<Constant "File not found">`) >> 8
   \   0000001A   ........           CALL    UART_WriteString_P
     56          		return;
   \   0000001E   C00F               RJMP    ??PrintFile_1
     57          	}
     58          	
     59          	do
     60          	{
     61          		bytes = FileStore_ReadBytes(&f, buf, 20);
   \                     ??PrintFile_0:
   \   00000020   E144               LDI     R20, 20
   \   00000022   E050               LDI     R21, 0
   \   00000024   019E               MOVW    R19:R18, R29:R28
   \   00000026   018E               MOVW    R17:R16, R29:R28
   \   00000028   5E0C               SUBI    R16, 236
   \   0000002A   4F1F               SBCI    R17, 255
   \   0000002C   ........           CALL    FileStore_ReadBytes
   \   00000030   2F80               MOV     R24, R16
     62          		UART_WriteBytes(buf, bytes);
   \   00000032   2F20               MOV     R18, R16
   \   00000034   018E               MOVW    R17:R16, R29:R28
   \   00000036   ........           CALL    UART_WriteBytes
     63          	} while(bytes == 20);
   \   0000003A   3184               CPI     R24, 20
   \   0000003C   F389               BREQ    ??PrintFile_0
   \                     ??PrintFile_1:
   \   0000003E   96A4               ADIW    R29:R28, 36
   \   00000040   9189               LD      R24, Y+
   \   00000042   9508               RET
     64          }
     65          

   \                                 In segment CODE, align 2, keep-with-next
     66          void RunProgram(char* line)
   \                     RunProgram:
     67          {
   \   00000000   9760               SBIW    R29:R28, 16
     68          	fsFile f;
     69          	
     70          	if(FileStore_OpenFile(GetNextWord(line), &f) == false)
   \   00000002   ........           CALL    GetNextWord
   \   00000006   019E               MOVW    R19:R18, R29:R28
   \   00000008   ........           CALL    FileStore_OpenFile
   \   0000000C   2300               TST     R16
   \   0000000E   F421               BRNE    ??RunProgram_0
     71          	{
     72          		UART_WriteString_P("File not found");
   \   00000010   ....               LDI     R16, LOW(`?<Constant "File not found">`)
   \   00000012   ....               LDI     R17, (`?<Constant "File not found">`) >> 8
   \   00000014   ........           CALL    UART_WriteString_P
     73          		return;
   \                     ??RunProgram_0:
   \   00000018   9660               ADIW    R29:R28, 16
   \   0000001A   9508               RET
     74          	}
     75          	
     76          	// pass it on to the VX loader
     77          }
     78          
     79          #define BLOCK_SIZE 16
     80          #define DISC_SIZE 1024

   \                                 In segment CODE, align 2, keep-with-next
     81          void LoadFileToDisc(char* line)
   \                     LoadFileToDisc:
     82          {
   \   00000000   92DA               ST      -Y, R13
   \   00000002   92CA               ST      -Y, R12
   \   00000004   92BA               ST      -Y, R11
   \   00000006   92AA               ST      -Y, R10
   \   00000008   929A               ST      -Y, R9
   \   0000000A   928A               ST      -Y, R8
   \   0000000C   927A               ST      -Y, R7
   \   0000000E   926A               ST      -Y, R6
   \   00000010   925A               ST      -Y, R5
   \   00000012   924A               ST      -Y, R4
   \   00000014   93BA               ST      -Y, R27
   \   00000016   93AA               ST      -Y, R26
   \   00000018   939A               ST      -Y, R25
   \   0000001A   938A               ST      -Y, R24
   \   0000001C                      REQUIRE ?Register_R4_is_cg_reg
   \   0000001C                      REQUIRE ?Register_R5_is_cg_reg
   \   0000001C                      REQUIRE ?Register_R6_is_cg_reg
   \   0000001C                      REQUIRE ?Register_R7_is_cg_reg
   \   0000001C                      REQUIRE ?Register_R8_is_cg_reg
   \   0000001C                      REQUIRE ?Register_R9_is_cg_reg
   \   0000001C                      REQUIRE ?Register_R10_is_cg_reg
   \   0000001C                      REQUIRE ?Register_R11_is_cg_reg
   \   0000001C                      REQUIRE ?Register_R12_is_cg_reg
   \   0000001C                      REQUIRE ?Register_R13_is_cg_reg
   \   0000001C   9760               SBIW    R29:R28, 16
     83          unsigned char buf[BLOCK_SIZE];
     84          unsigned char length;
     85          unsigned long blockSize, size, current=0;
   \   0000001E   2488               CLR     R8
   \   00000020   2499               CLR     R9
   \   00000022   24AA               CLR     R10
   \   00000024   24BB               CLR     R11
     86          char* word;
     87          
     88          	word = GetNextWord(line);
   \   00000026   ........           CALL    GetNextWord
   \   0000002A   01C8               MOVW    R25:R24, R17:R16
     89          	size = ReadInteger(word);
   \   0000002C   ........           CALL    ReadInteger
   \   00000030   0128               MOVW    R5:R4, R17:R16
   \   00000032   0139               MOVW    R7:R6, R19:R18
     90          	word = GetNextWord(word);
   \   00000034   018C               MOVW    R17:R16, R25:R24
   \   00000036   ........           CALL    GetNextWord
     91          	blockSize = ReadInteger(word);
   \   0000003A   ........           CALL    ReadInteger
   \   0000003E   01C8               MOVW    R25:R24, R17:R16
   \   00000040   01D9               MOVW    R27:R26, R19:R18
     92          	
     93          	if(blockSize > BLOCK_SIZE)
   \   00000042   3101               CPI     R16, 17
   \   00000044   0598               CPC     R25, R8
   \   00000046   05A8               CPC     R26, R8
   \   00000048   05B8               CPC     R27, R8
   \   0000004A   F020               BRCS    ??LoadFileToDisc_0
     94          	{
     95          		blockSize = BLOCK_SIZE;
   \   0000004C   E180               LDI     R24, 16
   \   0000004E   E090               LDI     R25, 0
   \   00000050   E0A0               LDI     R26, 0
   \   00000052   E0B0               LDI     R27, 0
     96          	}
     97          	
     98          	if(size > DISC_SIZE)
   \                     ??LoadFileToDisc_0:
   \   00000054   E001               LDI     R16, 1
   \   00000056   1640               CP      R4, R16
   \   00000058   E004               LDI     R16, 4
   \   0000005A   0650               CPC     R5, R16
   \   0000005C   0468               CPC     R6, R8
   \   0000005E   0478               CPC     R7, R8
   \   00000060   F028               BRCS    ??LoadFileToDisc_1
     99          	{
    100          		UART_WriteString_P("N 0\n");
   \   00000062   ....               LDI     R16, LOW((`?<Constant "No files\\n">` + 27))
   \   00000064   ....               LDI     R17, HIGH((`?<Constant "No files\\n">` + 27))
   \   00000066   ........           CALL    UART_WriteString_P
    101          		return;
   \   0000006A   C016               RJMP    ??LoadFileToDisc_2
    102          	}
    103          	else
    104          	{
    105          		UART_WriteByte('A');
   \                     ??LoadFileToDisc_1:
   \   0000006C   E401               LDI     R16, 65
   \   0000006E   ........           CALL    UART_WriteByte
    106          		UART_WriteByte(' ');
   \   00000072   E200               LDI     R16, 32
   \   00000074   ........           CALL    UART_WriteByte
    107          		UART_WriteValueUnsigned(blockSize);
   \   00000078   018C               MOVW    R17:R16, R25:R24
   \   0000007A   019D               MOVW    R19:R18, R27:R26
   \   0000007C   ........           CALL    UART_WriteValueUnsigned
    108          		UART_WriteString_P("\n");
   \   00000080   ....               LDI     R16, LOW((`?<Constant "No files\\n">` + 10))
   \   00000082   ....               LDI     R17, HIGH((`?<Constant "No files\\n">` + 10))
   \   00000084   ........           CALL    UART_WriteString_P
   \   00000088   2D04               MOV     R16, R4
   \   0000008A   2905               OR      R16, R5
   \   0000008C   2906               OR      R16, R6
   \   0000008E   2907               OR      R16, R7
   \   00000090   F539               BRNE    ??LoadFileToDisc_3
    109          	}
    110          	
    111          	while(current < size)
    112          	{
    113          		if((current + blockSize) >= size)
    114          		{
    115          			length = size - current;
    116          		}
    117          		else
    118          		{
    119          			length = blockSize;
    120          		}
    121          		UART_ReadBytes(buf, length);
    122          		InternalEEPROM_WriteBytes(current, buf, length);
    123          		UART_WriteByte('*');
    124          		current += length;
    125          	}
    126          	UART_WriteByte('!');
   \                     ??LoadFileToDisc_4:
   \   00000092   E201               LDI     R16, 33
   \   00000094   ........           CALL    UART_WriteByte
    127          }
   \                     ??LoadFileToDisc_2:
   \   00000098   9660               ADIW    R29:R28, 16
   \   0000009A   9189               LD      R24, Y+
   \   0000009C   9199               LD      R25, Y+
   \   0000009E   91A9               LD      R26, Y+
   \   000000A0   91B9               LD      R27, Y+
   \   000000A2   9049               LD      R4, Y+
   \   000000A4   9059               LD      R5, Y+
   \   000000A6   9069               LD      R6, Y+
   \   000000A8   9079               LD      R7, Y+
   \   000000AA   9089               LD      R8, Y+
   \   000000AC   9099               LD      R9, Y+
   \   000000AE   90A9               LD      R10, Y+
   \   000000B0   90B9               LD      R11, Y+
   \   000000B2   90C9               LD      R12, Y+
   \   000000B4   90D9               LD      R13, Y+
   \   000000B6   9508               RET
   \                     ??LoadFileToDisc_5:
   \   000000B8   2EC8               MOV     R12, R24
   \                     ??LoadFileToDisc_6:
   \   000000BA   2D2C               MOV     R18, R12
   \   000000BC   018E               MOVW    R17:R16, R29:R28
   \   000000BE   ........           CALL    UART_ReadBytes
   \   000000C2   2D6C               MOV     R22, R12
   \   000000C4   E070               LDI     R23, 0
   \   000000C6   01AE               MOVW    R21:R20, R29:R28
   \   000000C8   0184               MOVW    R17:R16, R9:R8
   \   000000CA   0195               MOVW    R19:R18, R11:R10
   \   000000CC   ........           CALL    InternalEEPROM_WriteBytes
   \   000000D0   E20A               LDI     R16, 42
   \   000000D2   ........           CALL    UART_WriteByte
   \   000000D6   24DD               CLR     R13
   \   000000D8   0C8C               ADD     R8, R12
   \   000000DA   1C9D               ADC     R9, R13
   \   000000DC   1CAD               ADC     R10, R13
   \   000000DE   1CBD               ADC     R11, R13
   \                     ??LoadFileToDisc_3:
   \   000000E0   1484               CP      R8, R4
   \   000000E2   0495               CPC     R9, R5
   \   000000E4   04A6               CPC     R10, R6
   \   000000E6   04B7               CPC     R11, R7
   \   000000E8   F6A0               BRCC    ??LoadFileToDisc_4
   \   000000EA   018C               MOVW    R17:R16, R25:R24
   \   000000EC   019D               MOVW    R19:R18, R27:R26
   \   000000EE   0D08               ADD     R16, R8
   \   000000F0   1D19               ADC     R17, R9
   \   000000F2   1D2A               ADC     R18, R10
   \   000000F4   1D3B               ADC     R19, R11
   \   000000F6   1504               CP      R16, R4
   \   000000F8   0515               CPC     R17, R5
   \   000000FA   0526               CPC     R18, R6
   \   000000FC   0537               CPC     R19, R7
   \   000000FE   F2E0               BRCS    ??LoadFileToDisc_5
   \   00000100   2CC4               MOV     R12, R4
   \   00000102   18C8               SUB     R12, R8
   \   00000104   CFDA               RJMP    ??LoadFileToDisc_6
    128          

   \                                 In segment NEAR_F, align 1, keep-with-next
    129          __flash command commands[] = {{"ls", ListFiles}, {"prn", PrintFile}, {"run", RunProgram}, {"load", LoadFileToDisc}};
   \                     commands:
   \   00000000   ............       DW `?<Constant "ls">`, ListFiles/2, `?<Constant "prn">`, PrintFile/2
   \              ....        
   \   00000008   ............       DW `?<Constant "run">`, RunProgram/2, `?<Constant "load">`
   \   0000000E   ....               DW LoadFileToDisc/2

   \                                 In segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "ls">`:
   \   00000000   736C00             DB "ls"

   \                                 In segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "prn">`:
   \   00000000   7270006E           DB "prn"

   \                                 In segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "run">`:
   \   00000000   7572006E           DB "run"

   \                                 In segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "load">`:
   \   00000000   6F6C646100         DB "load"

   \                                 In segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "No files\\n">`:
   \   00000000   6F4E66206C69       DB "No files\012"
   \              7365000A    
   \   0000000A   000A               DB "\012"
   \   0000000C   66206C697365       DB " files "
   \              0020        
   \   00000014   622074797365       DB " bytes"
   \              00          
   \   0000001B   204E0A3000         DB "N 0\012"

   \                                 In segment NEAR_F, align 1, keep-with-next
   \                     `?<Constant "File not found">`:
   \   00000000   6946656C6E20       DB "File not found"
   \              746F6620756F
   \              646E00      

   Maximum stack usage in bytes:

     Function                       CSTACK RSTACK
     --------                       ------ ------
     ListFiles                         72      2
       -> FileStore_GetNextFileEntry
                                       72      2
       -> UART_WriteString_P           72      2
       -> FileStore_GetFileName        72      2
       -> UART_WriteString             72      2
       -> UART_WriteByte               72      2
       -> UART_WriteValueUnsigned      72      2
       -> UART_WriteString_P           72      2
       -> FileStore_GetNextFileEntry
                                       72      2
       -> UART_WriteString_P           72      2
       -> UART_WriteValueUnsigned      72      2
       -> UART_WriteString_P           72      2
       -> UART_WriteValueUnsigned      72      2
       -> UART_WriteString_P           72      2
     LoadFileToDisc                    32      2
       -> GetNextWord                  32      2
       -> ReadInteger                  32      2
       -> GetNextWord                  32      2
       -> ReadInteger                  32      2
       -> UART_WriteString_P           32      2
       -> UART_WriteByte               32      2
       -> UART_WriteByte               32      2
       -> UART_WriteValueUnsigned      32      2
       -> UART_WriteString_P           32      2
       -> UART_WriteByte               32      2
       -> UART_ReadBytes               32      2
       -> InternalEEPROM_WriteBytes    32      2
       -> UART_WriteByte               32      2
     PrintFile                         37      2
       -> GetNextWord                  37      2
       -> FileStore_OpenFile           37      2
       -> UART_WriteString_P           37      2
       -> FileStore_ReadBytes          37      2
       -> UART_WriteBytes              37      2
     RunProgram                        16      2
       -> GetNextWord                  16      2
       -> FileStore_OpenFile           16      2
       -> UART_WriteString_P           16      2
     Terminal_Init                      0      2
       -> Kernel_CreateTask             0      2


   Segment part sizes:

     Function/Label               Bytes
     --------------               -----
     Terminal_Init                   8
     ListFiles                     196
     PrintFile                      68
     RunProgram                     28
     LoadFileToDisc                262
     commands                       16
     ?<Constant "ls">                3
     ?<Constant "prn">               4
     ?<Constant "run">               4
     ?<Constant "load">              5
     ?<Constant "No files\n">       32
     ?<Constant "File not found">   15

 
 562 bytes in segment CODE
  79 bytes in segment NEAR_F
 
 641 bytes of CODE memory

Errors: none
Warnings: none
