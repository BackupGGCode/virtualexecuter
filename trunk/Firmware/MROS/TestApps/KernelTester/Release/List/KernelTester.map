################################################################################
#                                                                              #
#      IAR Universal Linker V4.53O/WIN                                         #
#                                                                              #
#           Link time     =  21/Dec/2007  23:42:53                             #
#           Target CPU    =  A90                                               #
#           List file     =  f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\List\KernelTester.map                   #
#           Output file 1 =  f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\Exe\KernelTester.a90                    #
#                            Format: intel-standard                            #
#           Command line  =  f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\Obj\Debugger.r90                        #
#                            f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\Obj\Kernel.r90                          #
#                            f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\Obj\main.r90                            #
#                            f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\Obj\MemoryManagement.r90                #
#                            f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\Obj\MessageQueue.r90                    #
#                            f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\Obj\Semaphore.r90                       #
#                            f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\Obj\TaskManagement.r90                  #
#                            f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\Obj\Timer.r90                           #
#                            f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\Obj\UART.r90                            #
#                            C:\PROGRA~1\IARSYS~1\EW23EV~1\avr\lib\cl3s-ec-sf. #
#                            r90                                               #
#                            -o                                                #
#                            f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\Exe\KernelTester.a90                    #
#                            -Fintel-standard -l                               #
#                            f:\Projects\[Drivers]\C\MROS\TestApps\KernelTeste #
#                            r\Release\List\KernelTester.map                   #
#                            -xms -IC:\PROGRA~1\IARSYS~1\EW23EV~1\avr\LIB\     #
#                            -f                                                #
#                            C:\PROGRA~1\IARSYS~1\EW23EV~1\avr\src\template\cf #
#                            gm32.xcl                                          #
#                            (-D_..X_INTVEC_SIZE=58 -D_..X_FLASH_NEND=7FFF     #
#                            -D_..X_FLASH_END=7FFF -D_..X_SRAM_BASE=60         #
#                            -D_..X_SRAM_TEND=FF -D_..X_SRAM_END=85F           #
#                            -D_..X_EXT_SRAM_BASE=_..X_SRAM_BASE               #
#                            -D_..X_EXT_SRAM_END=_..X_SRAM_BASE                #
#                            -D_..X_EXT_CSTACK_BASE=_..X_SRAM_BASE             #
#                            -D_..X_EXT_CSTACK_END=_..X_SRAM_BASE              #
#                            -D_..X_EXT_RSTACK_BASE=_..X_SRAM_BASE             #
#                            -D_..X_EXT_RSTACK_END=_..X_SRAM_BASE              #
#                            -D_..X_EXT_ROM_BASE=_..X_SRAM_BASE                #
#                            -D_..X_EXT_ROM_END=_..X_SRAM_BASE                 #
#                            -D_..X_EXT_NV_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_EXT_NV_END=_..X_SRAM_BASE                  #
#                            -D_..X_EEPROM_END=3FF) -D_..X_HEAP_SIZE=10        #
#                            -D_..X_CSTACK_SIZE=80 -D_..X_RSTACK_SIZE=80       #
#                            -e_small_write=_formatted_write                   #
#                            -e_medium_read=_formatted_read -f                 #
#                            C:\PROGRA~1\IARSYS~1\EW23EV~1\avr\src\template\cf #
#                            g3s.xcl                                           #
#                            (-ca90 -w29                                       #
#                            -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)             #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_NEND    #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_NEND   #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -Z(CODE)FAR_F=[_..X_FLASH_BASE-_..X_FLASH_END]/10 #
#                            000                                               #
#                            -Z(CODE)INITTAB=[_..X_FLASH_BASE-_..X_FLASH_END]/ #
#                            10000                                             #
#                            -Z(CODE)HUGE_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM=_..X_FLASH_BASE-_..X_FLASH_END   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_TEND                                         #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END,_..X_EXT_CSTACK_BASE-_..X_EXT_CSTACK_ #
#                            END                                               #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END,_..X_EXT_SRAM_BASE-_..X_EXT_SRAM_END      #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_SRAM_BASE-_. #
#                            .X_SRAM_END,_..X_EXT_RSTACK_BASE-_..X_EXT_RSTACK_ #
#                            END                                               #
#                            -Z(DATA)NEAR_I,NEAR_Z=_..X_SRAM_BASE-_..X_SRAM_EN #
#                            D,_..X_EXT_SRAM_BASE-_..X_EXT_SRAM_END            #
#                            -Z(DATA)NEAR_C=_..X_EXT_ROM_BASE-_..X_EXT_ROM_END #
#                            -Z(DATA)NEAR_N=_..X_EXT_NV_BASE-_..X_EXT_NV_END   #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=1-_..X_EEPROM_END)     #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE -H1895         #
#                            -h(CODE)0-(_..X_INTVEC_SIZE-1)                    #
#                                                                              #
#                        Copyright 1987-2002 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

                  There are no program entries.




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  R4              = REG
  R5              = REG
  R6              = REG
  R7              = REG
  R8              = REG
  R9              = REG
  __64bit_doubles = disabled
  __cpu           = 3
  __cpu_name      = AT90Mega32
  __enhanced_core = enabled
  __has_elpm      = false
  __memory_model  = 2
  __rt_version    = 2.30



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_FLASH_BASE         00000058 
           _..X_RSTACK_SIZE        00000080 
           _..X_CSTACK_SIZE        00000080 
           _..X_HEAP_SIZE          00000010 
           _..X_EEPROM_END         000003FF 
           _..X_EXT_NV_END         00000060 
           _..X_EXT_NV_BASE        00000060 
           _..X_EXT_ROM_END        00000060 
           _..X_EXT_ROM_BASE       00000060 
           _..X_EXT_RSTACK_END     00000060 
           _..X_EXT_RSTACK_BASE    00000060 
           _..X_EXT_CSTACK_END     00000060 
           _..X_EXT_CSTACK_BASE    00000060 
           _..X_EXT_SRAM_END       00000060 
           _..X_EXT_SRAM_BASE      00000060 
           _..X_SRAM_END           0000085F 
           _..X_SRAM_TEND          000000FF 
           _..X_SRAM_BASE          00000060 
           _..X_FLASH_END          00007FFF 
           _..X_FLASH_NEND         00007FFF 
           _..X_INTVEC_SIZE        00000058 
    *************************************************************************

  FILE NAME : f:\Projects\[Drivers]\C\MROS\TestApps\KernelTester\Release\Obj\Debugger.r90
  PROGRAM MODULE, NAME : Debugger

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE (ABS)
  Relative segment, address: DATA 0000001C, align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001C 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 0000001D, align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 0000001D 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 0000001E, align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                0000001E 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                0000001F 

    *************************************************************************

  FILE NAME : f:\Projects\[Drivers]\C\MROS\TestApps\KernelTester\Release\Obj\Kernel.r90
  PROGRAM MODULE, NAME : Kernel

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE (ABS)
  Relative segment, address: DATA 00000052 - 00000052 (1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT0                00000052 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 0000005C - 0000005C (1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR0                 0000005C 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000168 - 000001CF (68 bytes), align: 0
  Segment part 9.             Intra module refs:   Kernel_Init
                                                   Kernel_Run
                                                   SystemTimer
                                                   TaskToIndex
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           taskQueue               00000168        Kernel_CreateTask (TaskManagement)
                                                   Kernel_DeleteTask (TaskManagement)
                                                   Kernel_GetMessage (MessageQueue)
                                                   Kernel_PostMessage (MessageQueue)
                                                   Kernel_ResumeTask (TaskManagement)
                                                   Kernel_SemaphoreSignal (Semaphore)
                                                   Kernel_SemaphoreWait (Semaphore)
                                                   Kernel_Sleep (TaskManagement)
                                                   Kernel_SuspendTask (TaskManagement)
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000160 - 00000167 (8 bytes), align: 0
  Segment part 11.            Intra module refs:   Kernel_Run
                                                   SystemTimer
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           currentTaskIndex        00000166        Kernel_GetMessage (MessageQueue)
                                                   Kernel_SemaphoreWait (Semaphore)
                                                   Kernel_Sleep (TaskManagement)
           executionTimer          00000164 
           totalExecutionTime      00000160 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000005C - 00000093 (38 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_Init             0000005C        main (main)
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000094 - 000001F9 (166 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_Run              00000094        main (main)
               non_banked function
               calls indirect
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000001FA - 00000243 (4a bytes), align: 1
  Segment part 16.            Intra module refs:   Kernel_Init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           SystemTimer             000001FA 
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000244 - 00000277 (34 bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TaskToIndex             00000244        Kernel_CreateTask (TaskManagement)
                                                   Kernel_ResumeTask (TaskManagement)
                                                   Kernel_SuspendTask (TaskManagement)
               non_banked function
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000AC4 - 00000AC9 (6 bytes), align: 0
  Segment part 10.            Intra module refs:   Segment part 11 (Timer)
                                                   Segment part 7 (MemoryManagement)
                                                   ledmsgs (main)
                                                   semaFlip (main)
                                                   taskQueue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   00000AC4 
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 00000AD0 - 00000AD7 (8 bytes), align: 0
  Segment part 12.            Intra module refs:   currentTaskIndex
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000ACA - 00000ACF (6 bytes), align: 0
  Segment part 13.            Intra module refs:   currentTaskIndex
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   00000ACA 

    *************************************************************************

  FILE NAME : f:\Projects\[Drivers]\C\MROS\TestApps\KernelTester\Release\Obj\main.r90
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE (ABS)
  Relative segment, address: DATA 00000037 - 00000037 (1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRB                 00000037 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 00000038 - 00000038 (1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTB                00000038 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 00000039 - 00000039 (1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PINA                 00000039 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 0000003A - 0000003A (1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRA                 0000003A 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000001D0 - 000001DC (d bytes), align: 0
  Segment part 11.            Intra module refs:   AlternativeLedController
                                                   ledposter
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ledmsgs                 000001D2 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000001DD - 000001E0 (4 bytes), align: 0
  Segment part 13.            Intra module refs:   AlternativeLedFlipper
                                                   AlternativeSwitchFlipper
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           semaFlip                000001E0 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000278 - 00000279 (2 bytes), align: 1
  Segment part 15.            Intra module refs:   UserInput
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           workhard                00000278 
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000027A - 0000028B (12 bytes), align: 1
  Segment part 16.            Intra module refs:   UserInput
                                                   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           blink                   0000027A 
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000028C - 00000297 (c bytes), align: 1
  Segment part 17.            Intra module refs:   UserInput
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LEDControl1             0000028C 
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000298 - 000002A3 (c bytes), align: 1
  Segment part 18.            Intra module refs:   UserInput
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           LEDControl2             00000298 
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000002A4 - 000002F3 (50 bytes), align: 1
  Segment part 19.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UserInput               000002A4 
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000002F4 - 00000323 (30 bytes), align: 1
  Segment part 20.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ledposter               000002F4 
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000324 - 0000037B (58 bytes), align: 1
  Segment part 22.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AlternativeLedController
                                   00000324 
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000037C - 000003AF (34 bytes), align: 1
  Segment part 24.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AlternativeLedFlipper   0000037C 
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000003B0 - 0000042B (7c bytes), align: 1
  Segment part 26.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AlternativeSwitchFlipper
                                   000003B0 
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_F
  Relative segment, address: CODE 00000058 - 0000005A (3 bytes), align: 0
  Segment part 14.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           newline                 00000058 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000042C - 00000527 (fc bytes), align: 1
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0000042C        ?cstartup_call_main (?C_STARTUP)
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : f:\Projects\[Drivers]\C\MROS\TestApps\KernelTester\Release\Obj\MemoryManagement.r90
  PROGRAM MODULE, NAME : MemoryManagement

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Relative segment, address: DATA 000001E1 - 000005C8 (3e8 bytes), align: 0
  Segment part 7.             Intra module refs:   Kernel_Allocate
                                                   Kernel_Deallocate
                                                   Kernel_InitHeap
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000528 - 0000053F (18 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_InitHeap         00000528        Kernel_Init (Kernel)
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000540 - 000005D3 (94 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_Allocate         00000540        main (main)
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000005D4 - 00000641 (6e bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_Deallocate       000005D4        main (main)
               non_banked function

    *************************************************************************

  FILE NAME : f:\Projects\[Drivers]\C\MROS\TestApps\KernelTester\Release\Obj\MessageQueue.r90
  PROGRAM MODULE, NAME : MessageQueue

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000642 - 000006A7 (66 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_PostMessage      00000642        ledposter (main)
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000006A8 - 0000070F (68 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_GetMessage       000006A8        AlternativeLedController (main)
               non_banked function

    *************************************************************************

  FILE NAME : f:\Projects\[Drivers]\C\MROS\TestApps\KernelTester\Release\Obj\Semaphore.r90
  PROGRAM MODULE, NAME : Semaphore

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000710 - 0000074F (40 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_SemaphoreWait    00000710        AlternativeLedFlipper (main)
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000750 - 00000779 (2a bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_SemaphoreSignal
                                   00000750        AlternativeSwitchFlipper (main)
               non_banked function

    *************************************************************************

  FILE NAME : f:\Projects\[Drivers]\C\MROS\TestApps\KernelTester\Release\Obj\TaskManagement.r90
  PROGRAM MODULE, NAME : TaskManagement

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0000077A - 000007D9 (60 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_CreateTask       0000077A        UserInput (main)
                                                   main (main)
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000007DA - 00000891 (b8 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_DeleteTask       000007DA        UserInput (main)
               non_banked function
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000892 - 000008C7 (36 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_SuspendTask      00000892        UserInput (main)
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000008C8 - 000008FD (36 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_ResumeTask       000008C8        UserInput (main)
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000008FE - 0000092B (2e bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_Sleep            000008FE        AlternativeSwitchFlipper (main)
                                                   blink (main)
               non_banked function

    *************************************************************************

  FILE NAME : f:\Projects\[Drivers]\C\MROS\TestApps\KernelTester\Release\Obj\Timer.r90
  PROGRAM MODULE, NAME : Timer

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE (ABS)
  Relative segment, address: DATA 00000053 - 00000053 (1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR0                00000053 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 00000059 - 00000059 (1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK                00000059 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000005C9 - 000005CC (4 bytes), align: 0
  Segment part 11.            Intra module refs:   Kernel_InitTimer
                                                   Kernel_TimerInterruptHandler
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0000092C - 00000943 (18 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_InitTimer        0000092C        Kernel_Init (Kernel)
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000944 - 000009AD (6a bytes), align: 1
  Segment part 15.            Intra module refs:   Segment part 8
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Kernel_TimerInterruptHandler
                                   00000944 
               interrupt, non_banked function
               calls indirect
               stack 1 = 00000000 ( 0000000F )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 00000000 - 0000002B (2c bytes), align: 1
  Segment part 8. ROOT.

    *************************************************************************

  FILE NAME : f:\Projects\[Drivers]\C\MROS\TestApps\KernelTester\Release\Obj\UART.r90
  PROGRAM MODULE, NAME : UART

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE (ABS)
  Relative segment, address: DATA 00000029 - 00000029 (1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRRL                00000029 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 0000002A - 0000002A (1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSRB                0000002A 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 0000002B - 0000002B (1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSRA                0000002B 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 0000002C - 0000002C (1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR                  0000002C 
    -------------------------------------------------------------------------
ABSOLUTE (ABS)
  Relative segment, address: DATA 00000040 - 00000040 (1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRRH                00000040 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000009AE - 000009BB (e bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART_Init               000009AE        main (main)
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000009BC - 000009C3 (8 bytes), align: 1
  Segment part 17.            Intra module refs:   UART_WriteString_P
                                                   WriteHexDigit
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART_WriteByte          000009BC 
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000009C4 - 000009EB (28 bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART_WriteString_P      000009C4        main (main)
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000003 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 000009EC - 00000A1F (34 bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           UART_WritePointer       000009EC        main (main)
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A20 - 00000A2D (e bytes), align: 1
  Segment part 26.            Intra module refs:   UART_WritePointer
           LOCAL                   ADDRESS         
           =====                   =======         
           WriteHexDigit           00000A20 
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : C:\PROGRA~1\IARSYS~1\EW23EV~1\avr\lib\cl3s-ec-sf.r90
  PROGRAM MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 00000003 (4 bytes), align: 1
  Segment part 0. ROOT.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000A2E, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              00000A2E        Segment part 0 (?RESET)
           __RESTART               00000A2E 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A2E - 00000A39 (c bytes), align: 1
  Segment part 4.             Intra module refs:   ?C_STARTUP
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A3A - 00000A3D (4 bytes), align: 1
  Segment part 6.             Intra module refs:   Segment part 4
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    00000A3A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A3E - 00000A45 (8 bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      00000A3E        ?<Segment init: NEAR_I> (Kernel)
                                                   ?<Segment init: NEAR_Z> (Kernel)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A46 - 00000A51 (c bytes), align: 1
  Segment part 8.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     00000A46 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ML_SRAM_SRAM_L07

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000A52 - 00000A69 (18 bytes), align: 1
  Segment part 1.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ML_SRAM_SRAM_16_L07    00000A52        Kernel_DeleteTask (TaskManagement)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000A6A - 00000A6D (4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        00000A6A        ?call_low_level_init (?C_STARTUP)
               non_banked function

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000A6E - 00000A81 (14 bytes), align: 1
  Segment part 8.             Intra module refs:   __flashcpy
                                                   __segment_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __memclr                00000A6E 
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A82 - 00000A89 (8 bytes), align: 1
  Segment part 9.             Intra module refs:   __segment_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __flashcpy              00000A82 
               non_banked function
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 00000A8A - 00000ABD (34 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          00000A8A        ?need_segment_init (?C_STARTUP)
               non_banked function
               calls direct
               stack 1 = 00000000 ( 00000000 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 00000AD0, align: 0
  Segment part 6.             Intra module refs:   __segment_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment part INITTAB>
                                   00000AD0 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 00000ABE - 00000AC3 (6 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  00000AC0 
           ?C_EXIT                 00000AC0 
           ?C_FUNCALL              00000ABE 
           _exit                   00000ABE        ?cstartup_call_main (?C_STARTUP)
           exit                    00000ABE        ?cstartup_call_main (?C_STARTUP)

    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?FILLER_BYTES

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 00000000 - 0000002B (2c bytes), align: 0
  Segment part 1.
    -------------------------------------------------------------------------
?FILL1
  Relative segment, address: CODE 0000002C - 00000057 (2c bytes), align: 0
  Segment part 0.




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE   START ADDRESS    END ADDRESS      SIZE  TYPE  ALIGN
=======              =====   =============    ===========      ====  ====  =====
INTVEC               CODE         00000000 - 0000002B            2C   com    1
?FILL1               CODE         0000002C - 00000057            2C   rel    0
NEAR_F               CODE         00000058 - 0000005A             3   rel    0
CODE                 CODE         0000005C - 00000AC3           A68   rel    1
INITTAB              CODE         00000AC4 - 00000ACF             C   rel    0
NEAR_ID              CODE         00000AD0 - 00000AD7             8   rel    0
ABSOLUTE (ABS)       DATA              0000001C                       rel    0
                     DATA              0000001D                     
                     DATA              0000001E                     
                     DATA              0000001F                     
                     DATA         00000029 - 00000029             1 
                     DATA         0000002A - 0000002A             1 
                     DATA         0000002B - 0000002B             1 
                     DATA         0000002C - 0000002C             1 
                     DATA         00000037 - 00000037             1 
                     DATA         00000038 - 00000038             1 
                     DATA         00000039 - 00000039             1 
                     DATA         0000003A - 0000003A             1 
                     DATA         00000040 - 00000040             1 
                     DATA         00000052 - 00000052             1 
                     DATA         00000053 - 00000053             1 
                     DATA         00000059 - 00000059             1 
                     DATA         0000005C - 0000005C             1 
CSTACK               DATA         00000060 - 000000DF            80   dse    0
RSTACK               DATA         000000E0 - 0000015F            80   dse    0
NEAR_I               DATA         00000160 - 00000167             8   rel    0
NEAR_Z               DATA         00000168 - 000005CC           465   rel    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 2 731 bytes of CODE memory (44 range fill)
 1 402 bytes of DATA memory

Errors: none
Warnings: none

